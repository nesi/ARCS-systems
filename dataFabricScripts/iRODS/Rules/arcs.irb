# iRODS local rules for ARCS sites
# Default-resource must be set appropriately for your site (e.g. arcs-df.vpac.org)
#
acSetRescSchemeForCreate|$userNameClient == guest %% $userNameClient == anonymous|msiSetNoDirectRescInp(ARCS-FABRIC%arcs-df.ivec.org%arcs-df.vpac.org%arcs-df.qcif.edu.au%arcs-df.intersect.org.au%arcs-df.tpac.org.au%emii.resource.tpac.org.au%arcs-df.eresearchsa.edu.au)|nop
acSetRescSchemeForCreate|"$objPath" like "/ARCS/home/*/Archive_S3/*"|msiSetDefaultResc(s3Resc_us,preferred)|nop
acSetRescSchemeForCreate|"$objPath" like "/ARCS/projects/TCMIP/*"|msiSetDefaultResc(arcs-df.vpac.org,preferred)|nop
acSetRescSchemeForCreate|"$objPath" like "/ARCS/home/charlie.bond/*"|msiSetDefaultResc(arcs-df.ivec.org,preferred)|nop
acSetRescSchemeForCreate|"$objPath" like "/ARCS/home/stephen.anthony/*"|msiSetDefaultResc(arcs-df.ivec.org,preferred)|nop
acSetRescSchemeForCreate|"$objPath" like "/ARCS/home/kylie.pitt/*"|msiSetDefaultResc(arcs-df.qcif.edu.au,preferred)|nop
acSetRescSchemeForCreate|"$objPath" like "/ARCS/projects/PUBLUMW/*"|msiSetDefaultResc(arcs-df.vpac.org,preferred)|nop
acSetRescSchemeForCreate|"$objPath" like "/ARCS/projects/LiDAR/*"|msiSetDefaultResc(arcs-df.qcif.edu.au,preferred)|nop
acSetRescSchemeForCreate||msiSetDefaultResc(DEFAULT_RESOURCE,preferred)|nop
acSetVaultPathPolicy||msiSetGraftPathScheme(no,0)|nop

#Replication Rules
#acPostProcForPut||acGetValueForObjectAttribute(RESC_NAME,RESC_STATUS like '%up' AND RESC_GROUP_NAME = 'ARCS-REPLISET' AND RESC_NAME != '$rescName',*resourceList)##delayExec(<PLUSET>20s</PLUSET><EF>2s DOUBLE UNTIL SUCCESS OR 2 TIMES</EF>,acGetDataModifyTime($dataId,*dataModifiedTime)##msiGetSystemTime(*systemTime, null)##msiGetDiffTime(*dataModifiedTime,*systemTime,null,*diffTime)##ifExec(*diffTime > 15,msiSysChksumDataObj##msiSysReplDataObj(*resourceList,null),nop##nop,fail,nop),nop##nop##nop##succeed)|msiSendMail(arcs-data@arcs.org.au,ARCS Data Fabric Alert: All replication resources down,All resources suitable for replication are down. Replication disrupted.)##nop
#acPostProcForCopy||acGetValueForObjectAttribute(RESC_NAME,RESC_STATUS like '%up' AND RESC_GROUP_NAME = 'ARCS-REPLISET' AND RESC_NAME != '$rescName',*resourceList)##delayExec(<PLUSET>20s</PLUSET><EF>2s DOUBLE UNTIL SUCCESS OR 2 TIMES</EF>,acGetDataModifyTime($dataId,*dataModifiedTime)##msiGetSystemTime(*systemTime, null)##msiGetDiffTime(*dataModifiedTime,*systemTime,null,*diffTime)##ifExec(*diffTime > 15,msiSysChksumDataObj##msiSysReplDataObj(*resourceList,null),nop##nop,fail,nop),nop##nop##nop##succeed)|msiSendMail(arcs-data@arcs.org.au,ARCS Data Fabric Alert: All replication resources down,All resources suitable for replication are down. Replication disrupted.)##nop

#Access control, trash and quotas
acAclPolicy|"$userNameClient" != "QuickShare"|msiAclPolicy(STRICT)|nop
acTrashPolicy||nop|nop
acRescQuotaPolicy||msiSetRescQuotaPolicy(off)|nop
acSetReServerNumProc||msiSetReServerNumProc(4)|nop

# Rules to stop deletion and moving. Note that for this to work the corresponding rules most be commented in core.irb
acPreprocForRmColl|($collParentName != /ARCS/home) && ($collParentName != /ARCS/projects) && ("$collName" != "/ARCS/home/$userNameClient/Archive_S3")|nop|nop
acPreProcForObjRename(*sourceObject,*destObject)|("*sourceObject" like "/ARCS/home/*/*") && ("*sourceObject" != "/ARCS/home/$userNameClient/Archive_S3")|nop|nop
acPreProcForObjRename(*sourceObject,*destObject)|"*sourceObject" like "/ARCS/projects/*/*"|nop|nop
acPreProcForObjRename(*sourceObject,*destObject)|"*sourceObject" like "/ARCS/trash/*"|nop|nop

#Utilities
acGetValueForObjectAttribute(*rodsAttribute,*attributeCondition,*attributeValue)||msiMakeQuery(*rodsAttribute,*attributeCondition,*attributeQuery)##msiExecStrCondQuery(*attributeQuery,*queryResults)##forEachExec(*queryResults,msiGetValByKey(*queryResults,*rodsAttribute,*attributeValue),nop)
acGetDataModifyTime(*dataID,*dataModifyTime)||acGetValueForObjectAttribute(DATA_MODIFY_TIME,DATA_ID = '*dataID',*dataModifyTime)
acGetIcatResults(*Action,*Condition,*GenQOut)|(*Action == chksumRescLoc) |msiMakeQuery("DATA_REPL_NUM,DATA_NAME,DATA_PATH, COLL_NAME, RESC_NAME,RESC_LOC",*Condition,*Query)##msiExecStrCondQuery(*Query, *GenQOut)|nop##nop
acGetIcatResults(*Action,*Condition,*GenQOut)|*Action == list|msiMakeQuery("DATA_NAME, COLL_NAME, DATA_RESC_NAME, DATA_REPL_NUM, DATA_SIZE",*Condition,*Query)##msiExecStrCondQuery(*Query, *GenQOut)|nop##nop
