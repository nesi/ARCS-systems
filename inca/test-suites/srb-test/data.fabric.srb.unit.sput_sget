#!/usr/bin/env perl

use strict;
use warnings;
use Inca::Reporter::SimpleUnit;

my $reporter = new Inca::Reporter::SimpleUnit(
  name => 'data.fabric.srb.unit.sput_sget',
  version => 1.0,
  description => 'This reporter tests data transfer via SRB',
  url => 'http://www.arcs.org.au',
  unit_name => 'sput_sget'
);
my $dir = $ENV{'SRB_TEST_PATH'}?$ENV{'SRB_TEST_PATH'}:$reporter->getcwd;
$reporter->addDependency('Inca::Reporter::GridProxy');
$reporter->addArg('site');
$reporter->addArg('type', 'srb server type', 'development');

$reporter->processArgv(@ARGV);
my $site=$reporter->argValue('site');
my $type=$reporter->argValue('type');

$reporter->setBody("<srb_site>".$site."</srb_site><srb_test>Sput_Sget</srb_test>");

my $MDIR = "$ENV{HOME}/.srb/srb_test.$$";
mkdir $MDIR || die "couldn't make $MDIR";
$reporter->tempFile($MDIR);

my $mdasEnv="$MDIR/.MdasEnv.$$";
my $cmd="$dir/srb-env.py -m $site $type -o $mdasEnv";
$reporter->log('info',$cmd);
`$cmd 2>&1`;
$ENV{"mdasEnvFile"} = "$MDIR/.MdasEnv.$$";

my $srbdir = "srb_test.$$";
my $srbfile = "$srbdir/srb.$$";
my $localsrc = "$MDIR/src.$$";
my $localdst = "$MDIR/dest.$$";

open(SRC, ">$localsrc");
  print SRC "Testing SRB put and get.$$";
close(SRC);
my $sinit = $reporter->loggedCommand("Sinit");
if ($?){
  failClean("Sinit failed $sinit");
}
my $smkdir = $reporter->loggedCommand("Smkdir $srbdir");
if ($?){
  failClean("Smkdir failed $smkdir");
}
my $sput = $reporter->loggedCommand("Sput $localsrc $srbfile");
if ($?){
  failClean("Sput failed $sput");
}
my $sget = $reporter->loggedCommand("Sget $srbfile $localdst");
if ($?){
  failClean("Sget failed $sget");
}
$reporter->unitSuccess();
$reporter->loggedCommand("Srm -r $srbdir");
$reporter->loggedCommand("Sexit");
$reporter->print();

sub failClean {
  my $err = shift;
  my $pid = $$;
  $err =~ s/$pid/PID/;
  $reporter->failPrintAndExit($err);
}
